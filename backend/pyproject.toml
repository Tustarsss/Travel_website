[project]
name = "travel-backend"
version = "0.1.0"
description = "Backend service for the personalized travel system"
readme = "README.md"
requires-python = ">=3.10"
authors = [{ name = "Travel System Dev Team", email = "dev@example.com" }]
dependencies = [
	"fastapi>=0.111.0",
	"uvicorn[standard]>=0.30.0",
	"sqlmodel>=0.0.19",
	"sqlalchemy>=2.0.30",
	"aiosqlite>=0.19.0",
	"pydantic-settings>=2.3.0",
	"alembic>=1.13.1",
	"httpx>=0.27.0",
	"python-multipart>=0.0.9",
	"jinja2>=3.1.4",
	"redis>=5.0.0",
	"pytest>=8.4.2",
	"pytest-asyncio>=0.23.0",
	"numpy>=2.2.6",
	"faker>=37.8.0",
	"passlib>=1.7.4",
	"bcrypt==4.3.0",
	"pyjwt[crypto]>=2.8.0",
	"greenlet>=3.2.4",
]

[project.optional-dependencies]
dev = [
	"pytest>=8.2.0",
	"pytest-cov>=5.0.0",
	"ruff>=0.5.0",
	"mypy>=1.10.0",
	"types-requests>=2.32.0.20240602"
]
data = [
	"faker>=25.0.0",
	"numpy>=1.26.0",
	"rich>=13.7.0"
]
map_data = [
	"osmnx>=1.2.0",
	"geopandas>=0.8.0",
	"shapely>=1.7.0"
]

[project.scripts]
travel-backend = "app.__main__:run"

[[tool.uv.index]]
url = "https://mirrors.aliyun.com/pypi/simple/"
default = true

[build-system]
requires = ["setuptools>=64", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
include = ["app*"]

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-ra --strict-markers --strict-config --maxfail=1"
testpaths = ["tests"]
asyncio_mode = "auto"

[tool.ruff]
line-length = 100
src = ["app", "tests"]

[tool.mypy]
python_version = "3.10"
strict = true
packages = ["app"]
